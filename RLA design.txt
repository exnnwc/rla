Real Life Achievements
Your Resume Of Awesome
Tell people what you'e doing with your life.
Finally have an answer to what you've been up to.

12/20/15
I've been thinking that maybe actions aren't really necessary. I feel like they 
might be too micromanaging in the scheme of things. When I finish this refactor,
I'll sit down and fully design everything that's in Trello.

user
There are two types of achievements:
-Documented - user provides some kind of proof of its completion (should allow for proof to be made but not necessarily posted  
    in the case of sensitive material)
-Non-Documented - lower quality achievement that will have less of an impact

Achievements can be censored so that no one or only certain other users can view them. 

When creating empty achievements, there still needs to be a publication stage to activate them.


Users receive points that can be used to vote achievements up or down. They receive one point a day. They can vote up or down on something and use a point. If they vote up, it transfers to the owner of the action.

For example, one user can tag another user's achievement as something and another person can upvote that tagging action, letting the tagger receive a point. If they vote it down, the action receives a negative balance and the tagger will not receive any points from any upvotes until it becomes positive.

action_log(
id int unsigned primary key auto_increment,
created timestamp default current_timestamp,
updated timestamp default 0 on update current_timestamp,
active boolean default 1,
action_ref int unsigned
);
        
actions(
id int unsigned primary key auto_increment,
created timestamp default current_timestamp,
updated timestamp default 0 on update current_timestamp,
active boolean default 1,
achievement_id int unsigned
);

achievements(
id int unsigned primary key auto_increment,
created timestamp default current_timestamp,
updated timestamp default 0 on update current_timestamp,
completed timestamp,
owner int unsigned,
parent int unsigned,
convert_to int unsigned,
name varchar(255),
category varchar(255),
description text,
censored boolean,
documented boolean default 0,
active boolean default 1,
rank int unsigned,
repeated int unsigned);

notes(
id int unsigned primary key auto_increment,
created timestamp default current_timestamp,
updated timestamp default 0 on update current_timestamp,
user int unsigned,
achievement int unsigned,
edit int unsigned default 0,
active boolean default 1,
body text);

relations (
id int unsigned primary key auto_increment,
created timestamp default current_timestamp,
updated timestamp default 0 on update current_timestamp,
a int unsigned,
b int unsigned,
active boolean default 0);

create table requirements(
id int unsigned primary key auto_increment,
created timestamp default current_timestamp,
updated timestamp default 0 on update current_timestamp,
required_for int unsigned,
required_by int unsigned,
active boolean default 0);

tags(
id int unsigned primary key auto_increment,
created timestamp default current_timestamp,
updated timestamp default 0 on update current_timestamp,
user_id int unsigned,
achievement_id int unsigned,
name varchar(255),
active boolean default 1);

work(
id int unsigned primary key auto_increment,
created timestamp default current_timestamp,
updated timestamp default 0 on update current_timestamp,
achievement_id int unsigned,
summary text,
active boolean default 1);

Categories aren't nearly as important.
Achievement
You did it.

Knowledge
You learned it. 

Record
Sometimes, the recording of you doing something is more important than what you actually did. #swag

